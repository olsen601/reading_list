from django.db import models
from django.contrib.auth.models import User


User._meta.get_field('email')._unique = True
User._meta.get_field('email')._blank = False
User._meta.get_field('last_name')._blank = False
User._meta.get_field('first_name')._blank = False


''' An author of one or more books '''
class Author(models.Model):
    name = models.CharField(max_length=60, blank=False)

    def __str__(self):
        return "Author: " + self.name


class Categorie(models.Model):
    name = models.CharField(max_length=20, blank=False)

    def __str__(self):
        return "Catagorie: " + self.name


''' A book containing at least one author, a title,
    the date pulished and an isbn '''
class Book(models.Model):
    google_id = models.CharField(max_length=100, blank=False)
    self_link = models.CharField(max_length=300, blank=False)
    title = models.CharField(max_length=200, blank=False)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)
    publisher = models.CharField(max_length=50, blank=False)
    published_date = models.CharField(max_length=30, blank=False)
    description = models.TextField(max_length=1000, blank=False)
    isbn_13 = models.CharField(max_length=13, unique=True)
    isbn_10 = models.CharField(max_length=10, unique=True)
    #average_rating = models.DecimalField(max_digits=2, decimal_places=2)
    small_thumbnail = models.CharField(max_length=300, blank=False)

    def __str__(self):
        return "Title: {} \n Author: {} \n Published: {} \n Description: {} \n Rating: {}".format(self.title, self.author, self.published_date, self.description, self.average_rating)


''' Genres generated by user to create genre lists '''
class Genre(models.Model):
    name = models.CharField(max_length=20, blank=False)
    user = models.ForeignKey('auth.User', blank=False, on_delete=models.CASCADE)

    def __str__(self):
        return "Genre: {} from User ID: {}".format(self.name, self.user)


''' Genre lists to store books associated with the genre '''
class GenreList(models.Model):
    genre = models.ForeignKey(Genre, blank=False, on_delete=models.CASCADE)
    user = models.ForeignKey('auth.User', blank=False, on_delete=models.CASCADE)
    book = models.ForeignKey(Book, blank=False, on_delete=models.CASCADE)

    def __str__(self):
        return "Genre ID: {} \n User ID: {} \n Book ID {}".format(self.genre, self.user, self.book)


''' Reviews of books '''
class BookReview(models.Model):
    book = models.ForeignKey(Book, blank=False, on_delete=models.CASCADE)
    article = models.TextField(max_length=800, blank=False)
    published_date = models.DateTimeField(blank=False)

    def __str__(self):
        return "Book ID: {} \n Article: {} \n Published: {}".format(self.book, self.article, self.published_date)
